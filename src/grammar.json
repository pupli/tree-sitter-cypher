{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "cypher",
  "rules": {
    "query": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "match_clause"
      }
    },
    "match_clause": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "MATCH"
        },
        {
          "type": "FIELD",
          "name": "pattern",
          "content": {
            "type": "SYMBOL",
            "name": "pattern"
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "where_clause"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "return_clause"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "where_clause": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "WHERE"
        },
        {
          "type": "FIELD",
          "name": "condition",
          "content": {
            "type": "SYMBOL",
            "name": "expression"
          }
        }
      ]
    },
    "return_clause": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "RETURN"
        },
        {
          "type": "FIELD",
          "name": "return_items",
          "content": {
            "type": "SYMBOL",
            "name": "return_items"
          }
        }
      ]
    },
    "pattern": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "node"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "relationship"
              },
              {
                "type": "SYMBOL",
                "name": "node"
              }
            ]
          }
        }
      ]
    },
    "node": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "variable"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": ":"
                },
                {
                  "type": "SYMBOL",
                  "name": "label"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "relationship": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "-["
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "relationship_type"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "]->"
        }
      ]
    },
    "expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "comparison"
        }
      ]
    },
    "comparison": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "="
        },
        {
          "type": "SYMBOL",
          "name": "string"
        }
      ]
    },
    "return_items": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          }
        }
      ]
    },
    "identifier": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "variable": {
      "type": "PATTERN",
      "value": "[a-z][a-zA-Z0-9_]*"
    },
    "label": {
      "type": "PATTERN",
      "value": "[A-Z][a-zA-Z0-9_]*"
    },
    "relationship_type": {
      "type": "PATTERN",
      "value": "[A-Z_][A-Z0-9_]*"
    },
    "string": {
      "type": "PATTERN",
      "value": "'([^'\\\\]|\\\\.)*'"
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
